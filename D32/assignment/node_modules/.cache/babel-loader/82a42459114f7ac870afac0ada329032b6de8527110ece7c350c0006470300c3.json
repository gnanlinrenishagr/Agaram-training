{"ast":null,"code":"var _jsxFileName = \"/home/gnanlin/Agaram/D33/React/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { Button, Alert } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from './Header';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet List = [/*#__PURE__*/_jsxDEV(\"h1\", {\n  children: \"1\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 13\n}, this), 2, 4, 5];\nlet count = 5;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      name: \"lin\",\n      address: \"marthandam\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        as: \"a\",\n        variant: \"success\",\n        children: \"Enterapp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), List, count > 5 ? /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"success\",\n        children: \"sucess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: \"failure\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 64\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nfunction State() {\n  _s();\n  let [Name, ChangeName] = useState(\"  Gnanlin\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [Name, /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => ChangeName(\"Renisha\"),\n      children: \"Nameapp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      name: Name,\n      address: \"marthandam\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(State, \"yy8K5A/IjNfdhnmP0FWdkyrx7+U=\");\n_c2 = State;\nexport { State };\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"State\");","map":{"version":3,"names":["Button","Alert","Header","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","List","children","fileName","_jsxFileName","lineNumber","columnNumber","count","App","className","name","address","as","variant","_c","State","_s","Name","ChangeName","onClick","_c2","$RefreshReg$"],"sources":["/home/gnanlin/Agaram/D33/React/my-app/src/App.js"],"sourcesContent":["import './App.css';\nimport { Button, Alert } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from './Header';\nimport { useState } from 'react';\nlet List = [<h1>1</h1>, 2, 4, 5]\nlet count = 5\nfunction App() {\n  return (\n\n\n    <div className=\"App\">\n      <Header name=\"lin\" address=\"marthandam\" />\n      <header className=\"App-header\">\n        <Button as=\"a\" variant=\"success\">\n          Enterapp\n        </Button>\n        {List}\n\n        {count > 5 ? <Alert variant=\"success\">sucess</Alert> : <Alert variant=\"danger\">failure</Alert>}\n      </header>\n    </div>\n\n  );\n}\n\nfunction State() {\n  let [Name, ChangeName] = useState(\"  Gnanlin\")\n  return (\n    <>\n      {Name}\n      <Button onClick={()=>ChangeName(\"Renisha\")}>Nameapp</Button>\n      <Header name={Name} address=\"marthandam\" />\n    </>\n  )\n}\nexport { State }\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,MAAM,EAAEC,KAAK,QAAQ,iBAAiB;AAC/C,OAAO,sCAAsC;AAC7C,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACjC,IAAIC,IAAI,GAAG,cAACH,OAAA;EAAAI,QAAA,EAAI;AAAC;EAAAC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAChC,IAAIC,KAAK,GAAG,CAAC;AACb,SAASC,GAAGA,CAAA,EAAG;EACb,oBAGEV,OAAA;IAAKW,SAAS,EAAC,KAAK;IAAAP,QAAA,gBAClBJ,OAAA,CAACH,MAAM;MAACe,IAAI,EAAC,KAAK;MAACC,OAAO,EAAC;IAAY;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1CR,OAAA;MAAQW,SAAS,EAAC,YAAY;MAAAP,QAAA,gBAC5BJ,OAAA,CAACL,MAAM;QAACmB,EAAE,EAAC,GAAG;QAACC,OAAO,EAAC,SAAS;QAAAX,QAAA,EAAC;MAEjC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACRL,IAAI,EAEJM,KAAK,GAAG,CAAC,gBAAGT,OAAA,CAACJ,KAAK;QAACmB,OAAO,EAAC,SAAS;QAAAX,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,gBAAGR,OAAA,CAACJ,KAAK;QAACmB,OAAO,EAAC,QAAQ;QAAAX,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAGV;AAACQ,EAAA,GAjBQN,GAAG;AAmBZ,SAASO,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,IAAI,CAACC,IAAI,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,WAAW,CAAC;EAC9C,oBACEE,OAAA,CAAAE,SAAA;IAAAE,QAAA,GACGe,IAAI,eACLnB,OAAA,CAACL,MAAM;MAAC0B,OAAO,EAAEA,CAAA,KAAID,UAAU,CAAC,SAAS,CAAE;MAAAhB,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC5DR,OAAA,CAACH,MAAM;MAACe,IAAI,EAAEO,IAAK;MAACN,OAAO,EAAC;IAAY;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAC3C,CAAC;AAEP;AAACU,EAAA,CATQD,KAAK;AAAAK,GAAA,GAALL,KAAK;AAUd,SAASA,KAAK;AACd,eAAeP,GAAG;AAAC,IAAAM,EAAA,EAAAM,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}