{"ast":null,"code":"var _jsxFileName = \"/home/gnanlin/Agaram/CrashCourse/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [value, setValue] = useState(0);\n  const [list, setList] = useState([]);\n  // let list=[]\n  const outputArray = value => {\n    for (let i = 1; i <= value; i++) {\n      if (i % 5 === 0 && i % 3 === 0) {\n        setList([[...clist], \"FizzBuzz\"]);\n        alert(JSON.stringify(clist));\n        // list[i-1]=(\"FizzBuzz\")\n        // alert(i)\n      } else if (i % 5 === 0) {\n        setList([[...clist], \"Fizz\"]);\n        alert(JSON.stringify(clist));\n        // list[i-1]=(\"Fizz\")\n        // alert(i)\n      } else if (i % 3 === 0) {\n        setList([[...clist], \"Buzz\"]);\n        alert(JSON.stringify(clist));\n        // list[i-1]=(\"Buzz\")\n        // alert(i)\n      } else {\n        let x = [...clist, String(i)];\n        setList(x);\n        alert(JSON.stringify(clist));\n        // list[i-1]=(String(i))\n        alert(String(i));\n      }\n    }\n    // setList(list)\n    console.log(list);\n    list.map = each => {\n      // <h1>{each}</h1>\n      console.log(each);\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onKeyUp: e => setValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"submit\",\n      onClick: () => outputArray(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), value, clist, JSON.stringify(list)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Rei37RQPkWtuDpUpL+pdNcBSXbQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","value","setValue","list","setList","outputArray","i","clist","alert","JSON","stringify","x","String","console","log","map","each","className","children","onKeyUp","e","target","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["/home/gnanlin/Agaram/CrashCourse/my-app/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [value,setValue]=useState(0)\n  const [list,setList]=useState([])\n  // let list=[]\n  const outputArray=(value)=>{\n    for(let i=1;i<=value;i++){\n      if(i%5===0 && i%3===0){\n        setList([[...clist],\"FizzBuzz\"])\n        alert(JSON.stringify(clist))\n        // list[i-1]=(\"FizzBuzz\")\n        // alert(i)\n      }\n      else if(i%5===0 ){\n        setList([[...clist],\"Fizz\"])\n        alert(JSON.stringify(clist))\n        // list[i-1]=(\"Fizz\")\n        // alert(i)\n      }\n      else if( i%3===0){\n        setList([[...clist],\"Buzz\"])\n        alert(JSON.stringify(clist))\n        // list[i-1]=(\"Buzz\")\n        // alert(i)\n      }\n      else{\n        let x=[...clist,String(i)]\n        setList(x)\n        alert(JSON.stringify(clist))\n        // list[i-1]=(String(i))\n        alert(String(i))\n      }\n    }\n    // setList(list)\n    console.log(list)\n    list.map=(each)=>{\n      // <h1>{each}</h1>\n      console.log(each)\n    }\n  }\n  \n  return (\n    <div className=\"App\">\n      <input onKeyUp={(e)=>setValue((e.target.value))}/>\n      <input type='submit' value='submit' onClick={()=>outputArray(value)}/>\n      {value}\n      {clist}\n      {JSON.stringify(list)}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACN,QAAQ,CAAC,CAAC,CAAC;EAClC,MAAM,CAACO,IAAI,EAACC,OAAO,CAAC,GAACR,QAAQ,CAAC,EAAE,CAAC;EACjC;EACA,MAAMS,WAAW,GAAEJ,KAAK,IAAG;IACzB,KAAI,IAAIK,CAAC,GAAC,CAAC,EAACA,CAAC,IAAEL,KAAK,EAACK,CAAC,EAAE,EAAC;MACvB,IAAGA,CAAC,GAAC,CAAC,KAAG,CAAC,IAAIA,CAAC,GAAC,CAAC,KAAG,CAAC,EAAC;QACpBF,OAAO,CAAC,CAAC,CAAC,GAAGG,KAAK,CAAC,EAAC,UAAU,CAAC,CAAC;QAChCC,KAAK,CAACC,IAAI,CAACC,SAAS,CAACH,KAAK,CAAC,CAAC;QAC5B;QACA;MACF,CAAC,MACI,IAAGD,CAAC,GAAC,CAAC,KAAG,CAAC,EAAE;QACfF,OAAO,CAAC,CAAC,CAAC,GAAGG,KAAK,CAAC,EAAC,MAAM,CAAC,CAAC;QAC5BC,KAAK,CAACC,IAAI,CAACC,SAAS,CAACH,KAAK,CAAC,CAAC;QAC5B;QACA;MACF,CAAC,MACI,IAAID,CAAC,GAAC,CAAC,KAAG,CAAC,EAAC;QACfF,OAAO,CAAC,CAAC,CAAC,GAAGG,KAAK,CAAC,EAAC,MAAM,CAAC,CAAC;QAC5BC,KAAK,CAACC,IAAI,CAACC,SAAS,CAACH,KAAK,CAAC,CAAC;QAC5B;QACA;MACF,CAAC,MACG;QACF,IAAII,CAAC,GAAC,CAAC,GAAGJ,KAAK,EAACK,MAAM,CAACN,CAAC,CAAC,CAAC;QAC1BF,OAAO,CAACO,CAAC,CAAC;QACVH,KAAK,CAACC,IAAI,CAACC,SAAS,CAACH,KAAK,CAAC,CAAC;QAC5B;QACAC,KAAK,CAACI,MAAM,CAACN,CAAC,CAAC,CAAC;MAClB;IACF;IACA;IACAO,OAAO,CAACC,GAAG,CAACX,IAAI,CAAC;IACjBA,IAAI,CAACY,GAAG,GAAEC,IAAI,IAAG;MACf;MACAH,OAAO,CAACC,GAAG,CAACE,IAAI,CAAC;IACnB,CAAC;EACH,CAAC;EAED,oBACElB,OAAA;IAAKmB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBpB,OAAA;MAAOqB,OAAO,EAAGC,CAAC,IAAGlB,QAAQ,CAAEkB,CAAC,CAACC,MAAM,CAACpB,KAAM;IAAE;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAClD3B,OAAA;MAAO4B,IAAI,EAAC,QAAQ;MAACzB,KAAK,EAAC,QAAQ;MAAC0B,OAAO,EAAEA,CAAA,KAAItB,WAAW,CAACJ,KAAK;IAAE;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EACrExB,KAAK,EACLM,KAAK,EACLE,IAAI,CAACC,SAAS,CAACP,IAAI,CAAC;EAAA;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEV;AAACzB,EAAA,CAjDQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAmDZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}